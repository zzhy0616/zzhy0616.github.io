<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pollar&#39;s Blog</title>
  <icon>https://zzhy0616.github.io/icon.png</icon>
  
  <link href="https://zzhy0616.github.io/atom.xml" rel="self"/>
  
  <link href="https://zzhy0616.github.io/"/>
  <updated>2021-01-06T10:28:25.471Z</updated>
  <id>https://zzhy0616.github.io/</id>
  
  <author>
    <name>Poller</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搜索集合</title>
    <link href="https://zzhy0616.github.io/2020/11/07/%E6%90%9C%E7%B4%A2%E9%9B%86%E5%90%88-1/"/>
    <id>https://zzhy0616.github.io/2020/11/07/%E6%90%9C%E7%B4%A2%E9%9B%86%E5%90%88-1/</id>
    <published>2020-11-07T02:26:25.000Z</published>
    <updated>2021-01-06T10:28:25.471Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;特殊状态的枚举&quot;&gt;特殊状态的枚举&lt;/h2&gt;
&lt;p&gt;关于函数next_pumutation，可以把n个元素共n！种排列枚举出来&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>二叉树</title>
    <link href="https://zzhy0616.github.io/2020/09/20/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>https://zzhy0616.github.io/2020/09/20/%E4%BA%8C%E5%8F%89%E6%A0%91/</id>
    <published>2020-09-20T09:24:43.000Z</published>
    <updated>2020-12-06T03:50:09.559Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;二叉树的编号&quot;&gt;二叉树的编号&lt;/h2&gt;
&lt;h3 id=&quot;题目大意&quot;&gt;题目大意&lt;/h3&gt;
&lt;p&gt;UVa679&lt;br&gt;
&lt;a</summary>
        
      
    
    
    
    
    <category term="二叉树" scheme="https://zzhy0616.github.io/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>位运算</title>
    <link href="https://zzhy0616.github.io/2020/02/05/%E4%BD%8D%E8%BF%90%E7%AE%97/"/>
    <id>https://zzhy0616.github.io/2020/02/05/%E4%BD%8D%E8%BF%90%E7%AE%97/</id>
    <published>2020-02-05T12:47:34.000Z</published>
    <updated>2020-11-30T10:22:44.499Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;a</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>二分答案 分组</title>
    <link href="https://zzhy0616.github.io/2020/02/03/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88%E5%88%86%E7%BB%84/"/>
    <id>https://zzhy0616.github.io/2020/02/03/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88%E5%88%86%E7%BB%84/</id>
    <published>2020-02-03T15:41:51.000Z</published>
    <updated>2020-11-30T10:22:44.499Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;描述&quot;&gt;描述&lt;/h2&gt;
&lt;p&gt;有n个正整数排成一排，你要将这些数分成m份（同一份中的数字都是连续的，不能隔开），同时数字之和最大的那一份的数字之和尽量小。&lt;/p&gt;
&lt;h2</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>链表</title>
    <link href="https://zzhy0616.github.io/2020/01/17/%E9%93%BE%E8%A1%A8/"/>
    <id>https://zzhy0616.github.io/2020/01/17/%E9%93%BE%E8%A1%A8/</id>
    <published>2020-01-17T13:48:31.000Z</published>
    <updated>2020-11-30T10:22:44.499Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;链表可以使用结构体来存储 struct slist {int prev, value, next;}list[enough];&lt;br&gt;
也可以直接使用若干个数组来实现&lt;br&gt;
int prev[enough],</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>STL</title>
    <link href="https://zzhy0616.github.io/2020/01/17/STL/"/>
    <id>https://zzhy0616.github.io/2020/01/17/STL/</id>
    <published>2020-01-17T04:23:32.000Z</published>
    <updated>2020-11-30T10:24:08.670Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;pair-结构体&quot;&gt;pair 结构体&lt;/h2&gt;
&lt;p&gt;▶ 可以将两种类型融合成一种类型&lt;br&gt;
▶ 就比如一个区间可以用两个端点表示，例如区间 [1,3] pair&amp;lt;int, int&amp;gt; range;</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Binary</title>
    <link href="https://zzhy0616.github.io/2020/01/14/Binary/"/>
    <id>https://zzhy0616.github.io/2020/01/14/Binary/</id>
    <published>2020-01-14T12:55:10.000Z</published>
    <updated>2020-11-30T10:22:44.499Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;二分搜索（Binary-Search）&quot;&gt;二分搜索（Binary Search）&lt;/h2&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    
    <category term="二分" scheme="https://zzhy0616.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>学习笔记</title>
    <link href="https://zzhy0616.github.io/2020/01/14/2020.8.14%20note/"/>
    <id>https://zzhy0616.github.io/2020/01/14/2020.8.14%20note/</id>
    <published>2020-01-14T12:39:00.000Z</published>
    <updated>2020-11-30T10:22:44.523Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1&gt;Stack&lt;/h1&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span</summary>
        
      
    
    
    
    <category term="学习笔记" scheme="https://zzhy0616.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>学习笔记</title>
    <link href="https://zzhy0616.github.io/2020/01/14/2020.8.15%20note/"/>
    <id>https://zzhy0616.github.io/2020/01/14/2020.8.15%20note/</id>
    <published>2020-01-14T12:39:00.000Z</published>
    <updated>2020-11-30T10:22:44.499Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1&gt;BFS&lt;/h1&gt;
&lt;p&gt;对于同一个状态，宽度优先搜索只经过一次，因此复杂度为O(状态数*转移的方式)&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    <category term="学习笔记" scheme="https://zzhy0616.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>队列</title>
    <link href="https://zzhy0616.github.io/2020/01/14/%E9%98%9F%E5%88%97/"/>
    <id>https://zzhy0616.github.io/2020/01/14/%E9%98%9F%E5%88%97/</id>
    <published>2020-01-14T12:39:00.000Z</published>
    <updated>2020-11-30T10:22:44.499Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;a</summary>
        
      
    
    
    
    <category term="基本数据结构" scheme="https://zzhy0616.github.io/categories/%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>排序 Sorting</title>
    <link href="https://zzhy0616.github.io/2020/01/10/%E6%8E%92%E5%BA%8F%20Sorting/"/>
    <id>https://zzhy0616.github.io/2020/01/10/%E6%8E%92%E5%BA%8F%20Sorting/</id>
    <published>2020-01-10T01:55:53.000Z</published>
    <updated>2020-11-30T10:22:44.499Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Gnomesort-Naive-Improved&quot;&gt;Gnomesort: Naive + Improved&lt;/h2&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
        
      
    
    
    
    
  </entry>
  
  <entry>
    <title>木块问题</title>
    <link href="https://zzhy0616.github.io/2020/01/09/%E6%9C%A8%E5%9D%97%E9%97%AE%E9%A2%98/"/>
    <id>https://zzhy0616.github.io/2020/01/09/%E6%9C%A8%E5%9D%97%E9%97%AE%E9%A2%98/</id>
    <published>2020-01-09T06:35:15.000Z</published>
    <updated>2020-11-30T10:22:44.499Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;输入n，得到编号为0 —- n-1的木块，分别摆放在顺序排列编号为0 – n-1的位置。现对这些木块进行操作，操作分为四种。&lt;/p&gt;
&lt;p&gt;1、move a onto</summary>
        
      
    
    
    
    
    <category term="STL" scheme="https://zzhy0616.github.io/tags/STL/"/>
    
  </entry>
  
</feed>
